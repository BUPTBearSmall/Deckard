#!/bin/bash

#vector clustering for each group: $1=min_token, $2=stride, $3=similarity, $4=vecgroup_filename
if (($# != 4));
then
   echo "Error: wrong parameters for vdbclustergroup: $@"
   echo "Usage: $0 min_token stride similarity vecgroup_filename"
   exit 65
fi

t=$1
s=$2
sim=$3
vdb=$4

# convert SIMILARITY to DISTANCE used by LSH:
#       (1) always round up; (2) different for different code sizes; (3) require 'awk' for sqrt
i=`echo "$sim ${GROUPING_S}" | awk '{printf( "%.7g\n", sqrt((1-$1)*$2) )}'`

grpfileid=`echo "$vdb" | sed "s/.*vdb_${t}_${s}_g\([0-9]*\)_${i}_${GROUPING_S}.*/\1/"`
grpal=0
grpdist=0
# TODO: what are better distance parameters for the groups?
if [[ $grpfileid -le 0 ]]; then
   echo "Warning: invalid group id: $grpfileid in group $vdb...Skip." | tee -a "$TIME_DIR/cluster_vdb_${t}_${s}_allg_${i}_${GROUPING_S}"
   exit 1
elif [[ $grpfileid -eq 1 ]]; then
   grpal=`head -n $(expr $grpfileid + 1) $(dirname "$vdb")/ranges_${i}_${GROUPING_S} | tail -n 1 | awk '{print $3}'`
   grpdist=`echo "$sim ${grpal}" | awk '{printf( "%.7g\n", sqrt((1-$1)*$2) )}'`
else
   grpal=`head -n $(expr $grpfileid + 1) $(dirname "$vdb")/ranges_${i}_${GROUPING_S} | tail -n 1 | awk '{print $2}'`
   grpdist=`echo "$sim ${grpal}" | awk '{printf( "%.7g\n", sqrt((1-$1)*2*$2) )}'`
fi
cluster "$vdb" $grpdist 1>>"$TIME_DIR/cluster_vdb_${t}_${s}_allg_${i}_${GROUPING_S}" 2>&1
errcode=$?
if [[ $errcode -ne 0 ]]; then
   echo "Clustering: Possible errors for vector group: $vdb $grpdist. Check log: $TIME_DIR/cluster_$(basename "${vdb}")" | tee -a "$TIME_DIR/cluster_vdb_${t}_${s}_allg_${i}_${GROUPING_S}"
fi

exit $errcode

