%{
/*
 empty
*/

%}


%start sourceUnit

%token PRAGMA
%token FROM
%token VERSIONID
%token IDENTIFIER FUNCTION
%token IMPORT
%token AS LET
%token USING MAPPING MEMORY STORAGE MODIFIER
%token CONTRACT INTERFACE LIBRARY IS
%token PUBLIC PRIVATE CONSTANT INTERNAL
%token ANONYMOUS EXTERNAL INDEXED PAYABLE PURE VIEW
%token ADDRESS BOOL STRING VAR INT UINT BYTES BYTE FIXED UFIXED
%token CONST_NUM CONST_INT CONST_INT_H CONST_INT_O HEX_TAG HEX
%token THROW EMIT EVENT NEW AFTER DELETE
%token TRUE FALSE
%token WEI SZABO FINNEY ETHER SECONDS MINUTES HOURS DAYS WEEKS YEARS
%token DQUOTE SQUOTE
%token STRING_LIT

%token ENUM STRUCT IF ELSE WHILE DO FOR SWITCH CASE DEFAULT
%token BREAK CONTINUE RETURNS RETURN ASSEMBLY

%token INLINE STATIC FINAL ELLIPSIS TYPE TYPEOF TRY CATCH MATCH IN OF RELOCATABLE		/* not used yet  */
 
%type <t> PRAGMA
%type <t> FROM
%type <t> VERSIONID
%type <t> IDENTIFIER FUNCTION
%type <t> IMPORT
%type <t> AS LET
%type <t> USING MAPPING MEMORY STORAGE MODIFIER
%type <t> CONTRACT INTERFACE LIBRARY IS
%type <t> PUBLIC PRIVATE CONSTANT INTERNAL
%type <t> ANONYMOUS EXTERNAL INDEXED PAYABLE PURE VIEW
%type <t> ADDRESS BOOL STRING VAR INT UINT BYTES BYTE FIXED UFIXED
%type <t> CONST_NUM CONST_INT CONST_INT_H CONST_INT_O HEX_TAG HEX
%type <t> THROW EMIT EVENT NEW AFTER DELETE
%type <t> TRUE FALSE
%type <t> WEI SZABO FINNEY ETHER SECONDS MINUTES HOURS DAYS WEEKS YEARS
%type <t> DQUOTE SQUOTE
%type <t> STRING_LIT
%type <t> ENUM STRUCT IF ELSE WHILE DO FOR SWITCH CASE DEFAULT
%type <t> BREAK CONTINUE RETURNS RETURN ASSEMBLY

%type <t> ',' ')' ']' ';' '}' '{'  '~' '!'
%type <t> 'x' // a special letter used for fixed/ufixed points

%type <t> INLINE STATIC FINAL ELLIPSIS TYPE TYPEOF TRY CATCH MATCH IN OF RELOCATABLE		/* not used yet  */

%nonassoc IF
%nonassoc ELSE

%right <t> MAPSTO
%right <t> ASSIGN ASSIGN_MUL ASSIGN_DIV ASSIGN_REM ASSIGN_AND ASSIGN_XOR ASSIGN_OR ASSIGN_PLUS ASSIGN_MINUS ASSIGN_LSHIFT ASSIGN_RSHIFT ASSIGN_ASSEMBLY_L
%left <t> ASSIGN_ASSEMBLY_R
%right <t> '?' ':'
%left <t> OROR
%left <t> ANDAND
%left <t> '|'
%left <t> '^'
%left <t> '&'
%left <t> EQ NEQ
%left <t> LT GT GEQ LEQ
%left <t> LSHIFT RSHIFT
%left <t> '+' '-'
%left <t> '*' '/' '%'
%left <t> MULMUL
%right <t> PLUSPLUS MINUSMINUS
%left <t> POINTSAT '.' '(' '['

